{"version":3,"sources":["components/Navbar/navbar.jsx","components/Wrapper/wrapper.jsx","components/Container/container.jsx","components/Row/row.jsx","components/Column/column.jsx","components/CharacterCard/charactercard.jsx","characters.js","App.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","rightWrong","score","topScore","Wrapper","children","Container","Row","Column","CharacterCard","alt","name","src","image","id","onClick","handleClick","characters","App","state","currentScore","rightOrWrong","clicked","_this","indexOf","handleIncrement","setState","concat","handleReset","newestScore","handleShuffle","newDeck","array","i","length","j","Math","floor","random","_ref","shuffleCards","_this2","this","wrapper","navbar","container","row","map","character","console","log","column","charactercard","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.de0c7154.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nconst Navbar = props => (\n  <nav className=\"navbar navbar-dark bg-dark\">\n    <h1>Pokemon Memory Game!</h1>\n    <h3>{props.rightWrong}</h3>\n    <h3>Current Score: {props.score}</h3>\n    <h3>Top score: {props.topScore}</h3>\n  </nav>\n);\n\nexport default Navbar;\n","import React, { Component } from \"react\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;\n","import React, { Component } from \"react\";\n\nconst Container = props => (\n  <div className=\"container-fluid\">{props.children}</div>\n);\n\nexport default Container;\n","import React, { Component } from \"react\";\n\nconst Row = props => <div className=\"row\">{props.children}</div>;\n\nexport default Row;\n","import React, { Component } from \"react\";\n\nconst Column = props => <div className=\"col-md-3\">{props.children}</div>;\n\nexport default Column;\n","import React, { Component } from \"react\";\n\nconst CharacterCard = props => {\n  return (\n    <img\n      alt={props.name}\n      src={props.image}\n      id={props.id}\n      onClick={() => props.handleClick(props.id)}\n    />\n    // <div\n    //   className=\"card\"\n    //   id={props.id}\n    //   onClick={() => props.handleClick(props.id)}\n    // >\n    //   <div className=\"card-body\">\n    //     <img alt={props.name} src={props.image} />\n    //   </div>\n    // </div>\n  );\n};\n\nexport default CharacterCard;\n","const characters = [\n  {\n    id: 1,\n    name: \"Bulbasaur\",\n    image: \"./images/bulbasaur.png\"\n  },\n  {\n    id: 2,\n    name: \"Ivysaur\",\n    image: \"./images/Ivysaur.png\"\n  },\n  {\n    id: 3,\n    name: \"Venasaur\",\n    image: \"./images/venasaur.png\"\n  },\n  {\n    id: 4,\n    name: \"Charmander\",\n    image: \"./images/charmander.png\"\n  },\n  {\n    id: 5,\n    name: \"Charmeleon\",\n    image: \"./images/charmeleon.png\"\n  },\n  {\n    id: 6,\n    name: \"Charizard\",\n    image: \"./images/charizard.png\"\n  },\n  {\n    id: 7,\n    name: \"Squirtle\",\n    image: \"./images/squirtle.png\"\n  },\n  {\n    id: 8,\n    name: \"Wartortle\",\n    image: \"./images/wartortle.png\"\n  },\n  {\n    id: 9,\n    name: \"Blastoise\",\n    image: \"./images/blastoise.png\"\n  },\n  {\n    id: 10,\n    name: \"Pikachu\",\n    image: \"./images/pikachu.png\"\n  },\n  {\n    id: 11,\n    name: \"Raichu\",\n    image: \"./images/raichu.png\"\n  },\n  {\n    id: 12,\n    name: \"Growlithe\",\n    image: \"./images/growlithe.png\"\n  },\n  {\n    id: 13,\n    name: \"Arcanine\",\n    image: \"./images/arcanine.png\"\n  },\n  {\n    id: 14,\n    name: \"Psyduck\",\n    image: \"./images/psyduck.png\"\n  },\n  {\n    id: 15,\n    name: \"Golduck\",\n    image: \"./images/golduck.png\"\n  },\n  {\n    id: 16,\n    name: \"Mew\",\n    image: \"./images/mew.png\"\n  }\n];\n\nexport default characters;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n// Import all of your components\nimport Navbar from \"./components/Navbar/navbar\";\nimport Wrapper from \"./components/Wrapper/wrapper\";\nimport Container from \"./components/Container/container\";\nimport Row from \"./components/Row/row\";\nimport Column from \"./components/Column/column\";\nimport CharacterCard from \"./components/CharacterCard/charactercard\";\n// Import of your characters\nimport characters from \"./characters\";\n\n//Define a function that will shuffle the cards using random\nfunction shuffleCards(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nclass App extends Component {\n  state = {\n    characters: characters,\n    currentScore: 0,\n    topScore: 0,\n    rightOrWrong: \"\",\n    clicked: [] // This will store ID's of clicked elements\n  };\n\n  handleClick = id => {\n    if (this.state.clicked.indexOf(id) === -1) {\n      //User clicked a previously unclicked card\n      this.handleIncrement();\n      this.setState({ clicked: this.state.clicked.concat(id) });\n    } else {\n      // User loses\n      this.handleReset();\n    }\n  };\n\n  handleIncrement = () => {\n    //Increment the current score and set it in the state\n    const newestScore = this.state.currentScore + 1;\n    this.setState({\n      currentScore: newestScore,\n      rightOrWrong: \"Right!\"\n    });\n\n    // Test to see if the new score is higher than the state's top score, if it is, set the new top score\n    if (newestScore >= this.state.topScore) {\n      this.setState({\n        topScore: newestScore\n      });\n    }\n\n    // If the score is the max, set the rightOrWrong to \"You win! Game over!\"\n    if (newestScore === 16) {\n      this.setState({ rightOrWrong: \"You WIN!\" });\n    }\n\n    this.handleShuffle();\n  };\n\n  // Handle reset function\n  // resets the whole state of the app and shuffles\n  handleReset = () => {\n    this.setState({\n      currentScore: 0,\n      topScore: this.state.topScore, // keep this the top score\n      rightOrWrong: \"Wrong!\", // If this is being called, its because the user guessed incorrectly\n      clicked: [] //Empty clicked array,\n    });\n    this.handleShuffle();\n  };\n\n  //handleshuffle\n  // shuffle the array of friends and then use that to set the new state\n  handleShuffle = () => {\n    //Get a shuffled version of the character cards\n    let newDeck = shuffleCards(this.state.characters);\n    this.setState({\n      characters: newDeck\n    });\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Navbar\n          score={this.state.currentScore}\n          topScore={this.state.topScore}\n          rightWrong={this.state.rightOrWrong}\n        />\n        <Container>\n          <Row>\n            {this.state.characters\n              ? this.state.characters.map((character, i) => {\n                  i === 0 && console.log(character.image);\n                  return (\n                    <Column>\n                      <CharacterCard\n                        key={character.id}\n                        name={character.name}\n                        image={character.image}\n                        id={character.id}\n                        handleClick={this.handleClick}\n                        handleIncrement={this.handleIncrement}\n                        handleReset={this.handleReset}\n                        handleShuffle={this.handleShuffle}\n                      />\n                    </Column>\n                  );\n                })\n              : \"No Pokemon!\"}\n          </Row>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}